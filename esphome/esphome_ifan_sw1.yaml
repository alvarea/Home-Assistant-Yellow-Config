#
# ESPHOME SONOFF IFAN-04 SW1 - DORMITORIO
#
substitutions:
  name:  esphome_ifan_sw1
  device_description: Sonoff iFan04-L
  friendly_name: Ventilador Dormitorio

external_components:
  #- source: github://cpyarger/custom_components@master
  - source: github://hfuller/custom_components@master
    refresh: 0s

esphome:
  name: ${name}
  comment: ${device_description}
  project:
    name: cpyarger.sonoff-ifan04-l
    version: "1.0"
  
wifi:
  ssid: !secret wifi_ssid_wlan
  password: !secret wifi_pwd
  manual_ip:
    gateway: !secret wifi_gateway
    subnet: 255.255.255.0
    static_ip: 192.168.0.48

esp8266:
  board: esp01_1m
# Disable logging on serial as it is used by the remote
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  services:
    - service: fan_cycle
      then:
        - fan.cycle_speed: the_fan
ota:

uart:
  tx_pin: GPIO01
  rx_pin: GPIO03
  baud_rate: 9600

dashboard_import:
  package_import_url: github://cpyarger/esphome-templates/sonoff-ifan04-l.yaml@main

#captive_portal:

binary_sensor:
  - platform: gpio
    id: button_light
    pin: GPIO0
    on_press:
      then:
        - light.toggle: fan_light
output:
  - platform: esp8266_pwm
    id: led_pin
    pin: GPIO13
    inverted: true
light:
  - platform: ifan
    id: fan_light
    name: "${friendly_name} Light"
  - platform: monochromatic
    id: led1
    output: led_pin
    default_transition_length: 0s
    restore_mode: always off
button:
  - platform: template
    name: ${friendly_name} Cycle Fan
    on_press:
      then:
        - fan.cycle_speed: the_fan
fan:
  - platform: ifan
    id: the_fan
    name: "${friendly_name}"
    remote_enable: false  
    buzzer_enable: false

ifan04:
  on_fan:
    - lambda: |-
          auto call = speed ? id (the_fan).turn_on() :  id (the_fan).turn_off();
          call.set_speed(speed);
          call.perform();
  on_light:
    - light.toggle: fan_light

#web_server: